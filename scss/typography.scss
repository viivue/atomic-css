/**
 * Typography
 * https://stackoverflow.design/product/base/typography/
 */
@use "sass:map";
@import "helpers";

$dataset: (
        font-family:(
                type:value-key-as-postfix,
                value:(
                        sans:'-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Oxygen-Sans,Ubuntu,Cantarell,"Helvetica Neue",sans-serif',
                        serif:'Georgia, Cambria, "Times New Roman", Times, serif'
                )
        ),
        color:(
                type:value-key-as-postfix,
                prefix:'fc',
                value:(
                        "white":'#fff',
                        "black":'#000'
                )
        ),
        background-color:(
                type:value-key-as-postfix,
                prefix:'bg',
                value:(
                        "white":'#fff',
                        "black":'#000'
                )
        ),
        font-weight: (
                type:value-key-as-postfix,
                value:(
                        normal:400,
                        bold:700
                )
        ),
        font-style: normal italic,
        text-transform: capitalize lowercase uppercase none unset,
        text-decoration: underline none,
        text-align: left center right justify,
        white-space: normal nowrap pre pre-wrap pre-line,
        word-break: normal break-all keep-all inherit initial unset,
        break-word:(
                type:mixin
        )
);

// custom font family
$font_families: ();
@each $name, $data in $fonts {
  @if type-of($data) == 'map' {
    $font-face: map-get($data, 'font-face');
    $font_families: map.set($font_families, $name, $font-face);

    // has defined weights
    @if map-has-key($data, 'weight') {
      $weight: map.get($data, 'weight');

      @if type-of($weight) == 'list' {
        @each $w in $weight {
          .f-#{$name}-#{$w} {
            font-family: #{$font-face};
            font-weight: #{$w};
          }
        }
      }
      @if type-of($weight) == 'number' {
        .f-#{$name}-#{$weight} {
          font-family: #{$font-face};
          font-weight: #{$weight};
        }
      }
    }

  }
  @if type-of($data) == 'string' {
    $font_families: map.set($font_families, $name, $data);
  }
}

$custom_font_family: map-merge(map-get($dataset, "font-family", "value"), $font_families);
$dataset: map.set($dataset, "font-family", "value", $custom_font_family);

// custom color
$custom_color: map-merge(map-get($dataset, "color", "value"), $colors);
$dataset: map.set($dataset, "color", "value", $custom_color);

// custom background color
$custom_bg_color: map-merge(map-get($dataset, "background-color", "value"), $colors);
$dataset: map.set($dataset, "background-color", "value", $custom_bg_color);


// print
@include print($dataset);

// CSS  variables
@include print-variables($custom_font_family, "font");
@include print-variables($custom_color, "color");