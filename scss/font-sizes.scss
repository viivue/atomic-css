@import "helpers";

/**
 * Font Sizes
 */

@mixin font-sizes($font_sizes) {
  @each $breakpoint, $values in $font_sizes {
    @if is-breakpoint($breakpoint) {
      // Responsive value
      @include media-screen($breakpoint) {
        :root {
          @for $i from 1 through length($values) {
            $value: nth($values, $i);
            $postfix: get-desktop-value($i, $font_sizes);

            //@debug $value, $postfix;

            /// if changed compare with desktop value
            @if $value != $postfix {
              $previous_postfix: get-previous-breakpoint-value($i, $value, $breakpoint, $font_sizes);

              // and changed compare with the previous value
              @if $value != $previous_postfix {
                @include get-variable(bb-size-#{replace-prop($postfix)}, #{format-value($value)});
              }
            }
          }
        }
      }
    } @else {
      // Desktop value
      :root {
        @for $i from 1 through length($values) {
          $value: nth($values, $i);
          $postfix: get-previous-breakpoint-value($i, $value, $breakpoint, $font_sizes);
          //@debug $value, $postfix;

          @include get-variable(bb-size-#{replace-prop($postfix)}, #{format-value($value)});
        }
      }

      // generate font size selector
      @for $i from 1 through length($values) {
        $value: nth($values, $i);
        $postfix: get-previous-breakpoint-value($i, $value, $breakpoint, $font_sizes);
        //@debug $value, $postfix;

        $var: var(#{get-variable(bb-size-#{replace-prop($postfix)})});

        .fs#{replace-prop($postfix)} {
          font-size: #{$var};
        }
      }

    }
  }
}

@include font-sizes($font_sizes);


@function get-container-name($data) {
  $container-gap: map-get($data, 'gap');
  $container-selector: "";

  $index: 0;
  @each $name, $value in map-get($data, size) {
    @debug $index;
    @if ($index != 0) {
      $container-selector: $container-selector + "," + "." + $name;
    } @else {
      $container-selector: "." + $container-selector + $name;
    }
    $index: $index + 1;
  }
  @return $container-selector;
}

@mixin print-font-size-custom-class($data) {

  // print
  $dataset: ( );
  @include print($dataset);


  @each $name, $value in map-get($data, size) {
    .#{$name} {
      font-size: format-value($value);
    }
  }
}

@include print-font-size-custom-class($font_size_headings);

