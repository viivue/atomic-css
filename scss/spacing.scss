/**
 * Spacing
 * https://stackoverflow.design/product/base/spacing/
 */
@import "helpers";

// Margin and Padding
$classes: ("m":"margin", "p":"padding");

@mixin spacing-values($prefix,$axis,$postfix,$prop,$value) {
  // axes
  .#{$prefix}#{$axis}#{$postfix} {
    @each $ap in map-get($axes, $axis) {
      #{$prop}#{$ap}: #{val($value)};
    }
  }

  // top right bottom left
  @each $prefix-c, $prop-c in $coordinates {
    .#{$prefix}#{$prefix-c}#{$postfix} {
      #{$prop}-#{$prop-c}: #{val($value)};
    }
  }
}

@mixin spacing($prefix, $prop, $dataset) {
  @each $axis, $data in $dataset {
    @each $breakpoint, $values in $data {
      @include respond-to($breakpoint) {

        @for $i from 1 through length($values) {
          $value: nth($values, $i);
          $postfix: get-previous-breakpoint-value($i, $value, $breakpoint, $data);

          @if is-breakpoint($breakpoint) {
            // skip not responsive values
            @if $value != $postfix {
              /* Breakpoint #{$breakpoint} */
              @include spacing-values($prefix, $axis, $postfix, $prop, $value);
            }
          } @else {
            @include spacing-values($prefix, $axis, $postfix, $prop, $value);
          }
        }

      }
    }
  }
}

@each $prefix, $prop in $classes {

  @if ($prefix == "m") {
    /* Margin auto */
    .#{$prefix}-auto {
      #{$prop}: auto;
    }
    @each $prefix-mod, $prop-mod in $coordinates {
      .#{$prefix}#{$prefix-mod}-auto {
        #{$prop}-#{$prop-mod}: auto;
      }
    }
  }

  // axes
  @include spacing($prefix, $prop, $spacing_values);
}